This sample shows an issue with the Glassfish implementation of JAX-WS and JAXB.
Specifically a web service hosted on GlassFish does not recognize
Java type adapters specified on Java classes. The class under question is
Position which contains an attribute of type DecimalQuantity.

public class Position {

    @XmlElement(name = "Quantity", required = true)
    private DecimalQuantity quantity;
    ...

}

DecimalQuantity is annotated with XmlJavaTypeAdapter. So JAXB should use
this adapter to serialize DecimalQuantity.

@XmlJavaTypeAdapter(DecimalQuantityAdapter.class)
public class DecimalQuantity {

    private BigDecimal value;
    ...

}

And finally, here's the adapter for DecimalQuantity. It simply converts
DecimalQuantity to a BigDecimal and vice-versa.

public class DecimalQuantityAdapter extends XmlAdapter<BigDecimal, DecimalQuantity> {

    public DecimalQuantity unmarshal(BigDecimal val) throws Exception {
        return new DecimalQuantity(val);
    }

    public BigDecimal marshal(DecimalQuantity val) throws Exception {
        return val.getValue();
    }
}

This adapter works perfectly fine in a unit test which uses JAXB 2.2.3-1 to
serialize a Position object (see JaxbTest - to run it simply type mvn test).
However, when GlassFish tries to serialize the same object during a web service
call it throws the following exception:

Caused by: javax.xml.bind.JAXBException: class test.DecimalQuantity
           nor any of its super class is known to this context.
	at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getBeanInfo(JAXBContextImpl.java:594)
	at com.sun.xml.bind.v2.runtime.XMLSerializer.childAsXsiType(XMLSerializer.java:648)
	... 45 more

Test this by deploying the WAR generated by the maven project on GlassFish and
calling its GetPosition() web service method.

The reason for this exception is that GlassFish 3.0.1 uses an older version of
JAXB (version 2.2.1.1) which does not recognize XmlJavaTypeAdapter. This can be
proved by replacing the JAXB version in the unit test, it will immediately
throw the above exception.

I believe this problem can be fixed by updating the JAXB version on GlassFish to
2.2.3-1. Unfortunately I have tried to do this in several ways without any success.